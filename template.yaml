AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sample SAM Template for aws-meetup-demo

Globals:
  Function:
    Runtime: python2.7
    Timeout: 30

Resources:

  PostImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/
      Handler: app.post_image_lambda_handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ImagesTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ImagesTable
      Events:
        PostImageUrl:
          Type: Api
          Properties:
            Path: /images
            Method: post

  ListImagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/
      Handler: app.list_image_urls_handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ImagesTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ImagesTable
      Events:
        ListImageUrls:
          Type: Api
          Properties:
            Path: /images
            Method: get

  DeleteImageUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/
      Handler: app.delete_image_url_handler
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ImagesTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ImagesTable
      Events:
        DeleteImage:
          Type: Api
          Properties:
            Path: /images/{url+}
            Method: delete

  ImagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: KEYS_ONLY

  ImagesProcessStream:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/
      Handler: db_events.images_process_stream_handler
      Timeout: 300
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ImagesTable
      - S3CrudPolicy:
            BucketName: !Ref SquirrelBucket
      - RekognitionLabelsPolicy: {}
      Environment:
        Variables:
          TABLE_NAME: !Ref ImagesTable
          S3_BUCKET: !Ref SquirrelBucket
      Events:
        CredsTable:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
                - ImagesTable
                - StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 100

  SquirrelBucket:
    Type: AWS::S3::Bucket

  SquirrelSNSTopic:
    Type: AWS::SNS::Topic

  SquirrelProcessFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/
      Handler: s3_events.process_s3_handler
      Policies:
      - AmazonS3ReadOnlyAccess
      - SNSPublishMessagePolicy:
            TopicName:  !GetAtt SquirrelSNSTopic.TopicName
      Environment:
        Variables:
          SNS_TOPIC: !Ref SquirrelSNSTopic
      Events:
        PhotoUpload:
          Type: S3
          Properties:
            Bucket: !Ref SquirrelBucket
            Events: s3:ObjectCreated:*

Outputs:

  ApiUrl:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/images/"
